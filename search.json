[{"path":"https://nanx.me/ssw-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ssw-r authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"exact-alignment","dir":"Articles","previous_headings":"","what":"Exact alignment","title":"Code Examples for ssw-r","text":"Align read reference sequence (TTTTACGTCCCCC) print results: Get specific results, alignment scores:","code":"read |> align(\"TTTTACGTCCCCC\") CIGAR start index 4: 4M optimal_score: 8    sub-optimal_score: 0 target_begin: 4 target_end: 7 query_begin: 0  query_end: 3  Target:        4    ACGT    7                     |||| Query:         0    ACGT    3  ACGT a <- read |> align(\"TTTTACGTCCCCC\") a$alignment$optimal_score a$alignment$sub_optimal_score"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"deletion","dir":"Articles","previous_headings":"","what":"Deletion","title":"Code Examples for ssw-r","text":"","code":"read |> align(\"TTTTACAGTCCCCC\") CIGAR start index 4: 2M1D2M optimal_score: 5    sub-optimal_score: 0 target_begin: 4 target_end: 8 query_begin: 0  query_end: 3  Target:        4    ACAGT    8                     ||*|| Query:         0    AC-GT    3  ACGT"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"insertion-with-gap-open","dir":"Articles","previous_headings":"","what":"Insertion with gap open","title":"Code Examples for ssw-r","text":"","code":"read |> align(\"TTTTACTCCCCC\", gap_open = 3) CIGAR start index 4: 2M optimal_score: 4    sub-optimal_score: 0 target_begin: 4 target_end: 5 query_begin: 0  query_end: 1  Target:        4    AC    5                     || Query:         0    AC    1  ACGT"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"insertion-with-no-gap-open-penalty","dir":"Articles","previous_headings":"","what":"Insertion with no gap open penalty","title":"Code Examples for ssw-r","text":"","code":"read |> align(\"TTTTACTCCCCC\", gap_open = 0) CIGAR start index 4: 2M1I1M optimal_score: 6    sub-optimal_score: 0 target_begin: 4 target_end: 6 query_begin: 0  query_end: 3  Target:        4    AC-T    6                     ||*| Query:         0    ACGT    3  ACGT"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"specify-start-index","dir":"Articles","previous_headings":"","what":"Specify start index","title":"Code Examples for ssw-r","text":"Print results position 4:","code":"a <- align(\"ACTG\", \"ACTCACTG\", start_idx = 4) a CIGAR start index 0: 4M optimal_score: 8    sub-optimal_score: 0 target_begin: 0 target_end: 3 query_begin: 0  query_end: 3  Target:        0    ACTC    3                     |||* Query:         0    ACTG    3  ACTG a |> print(start_idx = 4) CIGAR start index 0: 4M optimal_score: 8    sub-optimal_score: 0 target_begin: 0 target_end: 3 query_begin: 0  query_end: 3  Target:        0    ACTG    3                     |||| Query:         0    ACTG    3  ACTG"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"forced-alignment","dir":"Articles","previous_headings":"","what":"Forced alignment","title":"Code Examples for ssw-r","text":"Enforce gaps increasing penalty: results truncated: Use formatter() avoid truncation: pretty-print formatted results directly:","code":"a <- force_align(\"ACTG\", \"TTTTCTGCCCCCACG\") a CIGAR start index 4: 3M optimal_score: 6    sub-optimal_score: 0 target_begin: 4 target_end: 6 query_begin: 1  query_end: 3  Target:        4    CTG    6                     ||| Query:         1    CTG    3  ACTG b <- a |> formatter() b a |> formatter(print = TRUE) TTTTCTGCCCCCACG    ACTG"},{"path":[]},{"path":"https://nanx.me/ssw-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nan Xiao. Author, maintainer. Nick Conway. Contributor, copyright holder.           https://github.com/Wyss/ssw-py Mengyao Zhao. Contributor, copyright holder.           https://github.com/mengyao/Complete-Striped-Smith-Waterman-Library","code":""},{"path":"https://nanx.me/ssw-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao N (2024). ssw: Striped Smith-Waterman Algorithm Sequence Alignment using SIMD. R package version 0.1.1, https://github.com/nanxstats/ssw-r, https://nanx./ssw-r/.","code":"@Manual{,   title = {ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD},   author = {Nan Xiao},   year = {2024},   note = {R package version 0.1.1, https://github.com/nanxstats/ssw-r},   url = {https://nanx.me/ssw-r/}, }"},{"path":"https://nanx.me/ssw-r/index.html","id":"ssw-r-","dir":"","previous_headings":"","what":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"ssw-r offers R interface SSW, fast implementation Smith-Waterman algorithm sequence alignment using SIMD. ssw-r currently built Python package ssw-py.","code":""},{"path":"https://nanx.me/ssw-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"Install ssw-r GitHub: Installed ssw-py via pip:","code":"remotes::install_github(\"nanxstats/ssw-r\") pip3 install ssw-py"},{"path":"https://nanx.me/ssw-r/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"","code":"reticulate::use_python(\"/usr/local/bin/python3\") library(\"ssw\")  \"ACGT\" |> align(\"TTTTACGTCCCCC\") \"ACGT\" |> align(\"TTTTACTCCCCC\", gap_open = 3) \"ACTG\" |> force_align(\"TTTTCTGCCCCCACG\") |> formatter(print = TRUE)"},{"path":"https://nanx.me/ssw-r/index.html","id":"developers","dir":"","previous_headings":"","what":"Developers","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"already installed Python ssw-py, want develop ssw-r RStudio, simply create file .Rprofile package directory set Python binary path (Homebrew Python 3 path example ): next time open project, correct Python path library path already set. technical details, see reticulate Python version configuration.","code":"Sys.setenv(RETICULATE_PYTHON = \"/usr/local/bin/python3\")"},{"path":"https://nanx.me/ssw-r/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"project licensed MIT license.","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a read to the reference with optional index offsetting — align","title":"Align a read to the reference with optional index offsetting — align","text":"Align read reference optional index offsetting","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a read to the reference with optional index offsetting — align","text":"","code":"align(   read = NULL,   reference = NULL,   gap_open = 3L,   gap_extension = 1L,   start_idx = 0L,   end_idx = 0L,   match_score = 2L,   mismatch_penalty = 2L )"},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a read to the reference with optional index offsetting — align","text":"read read, character string reference reference, character string gap_open Penalty gap_open gap_extension Penalty gap_extension start_idx Index start search end_idx Index end search (trying avoid target region). default value 0 means using whole reference length. match_score scoring matches, integer mismatch_penalty scoring mismatches, integer","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a read to the reference with optional index offsetting — align","text":"list containing ssw aligner object alignment results.","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align a read to the reference with optional index offsetting — align","text":"","code":"if (FALSE) { # is_installed_sswpy() a <- align(\"ACGT\", \"TTTTACGTCCCCC\") a a$alignment$optimal_score a$alignment$sub_optimal_score }"},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Forced alignment by increasing gap open penalty — force_align","title":"Forced alignment by increasing gap open penalty — force_align","text":"Forced alignment increasing gap open penalty","code":""},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forced alignment by increasing gap open penalty — force_align","text":"","code":"force_align(   read,   reference,   force_overhang = FALSE,   match_score = 2L,   mismatch_penalty = 2L )"},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forced alignment by increasing gap open penalty — force_align","text":"read read, character string reference reference, character string force_overhang Make sure one end overhangs? match_score scoring matches, integer mismatch_penalty scoring mismatches, integer","code":""},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forced alignment by increasing gap open penalty — force_align","text":"list containing input sequences, ssw aligner object, alignment results.","code":""},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forced alignment by increasing gap open penalty — force_align","text":"","code":"if (FALSE) { # is_installed_sswpy() # Results are truncated a <- force_align(\"ACTG\", \"TTTTCTGCCCCCACG\") a  # Format the results b <- a |> formatter() b  # Print the formatted results directly a |> formatter(print = TRUE) }"},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and pretty-print SSW forced alignment results without truncation — formatter","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"Format pretty-print SSW forced alignment results without truncation","code":""},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"","code":"formatter(x, print = FALSE)"},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"x Forced alignment results. object class ssw. print Pretty-print results?","code":""},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"","code":"if (FALSE) { # is_installed_sswpy() a <- force_align(\"ACTG\", \"TTTTCTGCCCCCACG\") b <- a |> formatter() b a |> formatter(print = TRUE) }"},{"path":"https://nanx.me/ssw-r/reference/is_installed_sswpy.html","id":null,"dir":"Reference","previous_headings":"","what":"Is ssw-py installed? — is_installed_sswpy","title":"Is ssw-py installed? — is_installed_sswpy","text":"ssw-py installed?","code":""},{"path":"https://nanx.me/ssw-r/reference/is_installed_sswpy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is ssw-py installed? — is_installed_sswpy","text":"","code":"is_installed_sswpy()"},{"path":"https://nanx.me/ssw-r/reference/is_installed_sswpy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is ssw-py installed? — is_installed_sswpy","text":"`TRUE` installed, `FALSE` .","code":""},{"path":"https://nanx.me/ssw-r/reference/is_installed_sswpy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is ssw-py installed? — is_installed_sswpy","text":"","code":"is_installed_sswpy() #> [1] FALSE"},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":null,"dir":"Reference","previous_headings":"","what":"Print SSW alignment results — print.ssw","title":"Print SSW alignment results — print.ssw","text":"Print SSW alignment results","code":""},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print SSW alignment results — print.ssw","text":"","code":"# S3 method for class 'ssw' print(x, start_idx = 0L, ...)"},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print SSW alignment results — print.ssw","text":"x object class ssw. start_idx Index start printing . ... Additional parameters print (used).","code":""},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print SSW alignment results — print.ssw","text":"","code":"if (FALSE) { # is_installed_sswpy() a <- align(\"ACGT\", \"TTTTACGTCCCCC\") a }"},{"path":"https://nanx.me/ssw-r/reference/pyssw.html","id":null,"dir":"Reference","previous_headings":"","what":"Global reference to ssw-py — pyssw","title":"Global reference to ssw-py — pyssw","text":"Global reference ssw-py initialized .onLoad.","code":""},{"path":"https://nanx.me/ssw-r/reference/pyssw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global reference to ssw-py — pyssw","text":"","code":"pyssw"},{"path":"https://nanx.me/ssw-r/reference/pyssw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global reference to ssw-py — pyssw","text":"object class python.builtin.module (inherits python.builtin.object) length 0.","code":""},{"path":"https://nanx.me/ssw-r/reference/pyssw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global reference to ssw-py — pyssw","text":"ssw-py reference object","code":""},{"path":"https://nanx.me/ssw-r/reference/ssw-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD — ssw-package","title":"ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD — ssw-package","text":"R interface SSW, fast implementation Smith-Waterman algorithm sequence alignment using SIMD.","code":""},{"path":[]},{"path":"https://nanx.me/ssw-r/reference/ssw-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD — ssw-package","text":"Maintainer: Nan Xiao @nanx.(ORCID) contributors: Nick Conway (https://github.com/Wyss/ssw-py) [contributor, copyright holder] Mengyao Zhao (https://github.com/mengyao/Complete-Striped-Smith-Waterman-Library) [contributor, copyright holder]","code":""},{"path":"https://nanx.me/ssw-r/news/index.html","id":"ssw-011","dir":"Changelog","previous_headings":"","what":"ssw 0.1.1","title":"ssw 0.1.1","text":"Added two arguments match_score mismatch_penalty scoring matches mismatches (#1).","code":""},{"path":"https://nanx.me/ssw-r/news/index.html","id":"ssw-010","dir":"Changelog","previous_headings":"","what":"ssw 0.1.0","title":"ssw 0.1.0","text":"First version. Implements align() force_align().","code":""}]

[{"path":"https://nanx.me/ssw-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ssw-r authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"exact-alignment","dir":"Articles","previous_headings":"","what":"Exact alignment","title":"Getting started with ssw-r: Sequence alignment examples","text":"Align read reference sequence (TTTTACGTCCCCC) print results: Get specific results, alignment scores:","code":"read |> align(\"TTTTACGTCCCCC\") CIGAR start index 4: 4M optimal_score: 8 sub-optimal_score: 0 target_begin: 4 target_end: 7 query_begin: 0 query_end: 3  Target:        4    ACGT    7                     |||| Query:         0    ACGT    3 a <- read |> align(\"TTTTACGTCCCCC\") a$alignment$optimal_score [1] 8 a$alignment$sub_optimal_score [1] 0"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"deletion","dir":"Articles","previous_headings":"","what":"Deletion","title":"Getting started with ssw-r: Sequence alignment examples","text":"","code":"read |> align(\"TTTTACAGTCCCCC\") CIGAR start index 4: 2M1D2M optimal_score: 5 sub-optimal_score: 0 target_begin: 4 target_end: 8 query_begin: 0 query_end: 3  Target:        4    ACAGT    8                     ||*|| Query:         0    AC-GT    3"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"insertion-with-gap-open","dir":"Articles","previous_headings":"","what":"Insertion with gap open","title":"Getting started with ssw-r: Sequence alignment examples","text":"","code":"read |> align(\"TTTTACTCCCCC\", gap_open = 3) CIGAR start index 4: 2M optimal_score: 4 sub-optimal_score: 0 target_begin: 4 target_end: 5 query_begin: 0 query_end: 1  Target:        4    AC    5                     || Query:         0    AC    1"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"insertion-with-no-gap-open-penalty","dir":"Articles","previous_headings":"","what":"Insertion with no gap open penalty","title":"Getting started with ssw-r: Sequence alignment examples","text":"","code":"read |> align(\"TTTTACTCCCCC\", gap_open = 0) CIGAR start index 4: 2M1I1M optimal_score: 6 sub-optimal_score: 0 target_begin: 4 target_end: 6 query_begin: 0 query_end: 3  Target:        4    AC-T    6                     ||*| Query:         0    ACGT    3"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"specify-start-index","dir":"Articles","previous_headings":"","what":"Specify start index","title":"Getting started with ssw-r: Sequence alignment examples","text":"Print results position 4:","code":"a <- align(\"ACTG\", \"ACTCACTG\", start_idx = 4) a CIGAR start index 0: 4M optimal_score: 8 sub-optimal_score: 0 target_begin: 0 target_end: 3 query_begin: 0 query_end: 3  Target:        0    ACTC    3                     |||* Query:         0    ACTG    3 a |> print(start_idx = 4) CIGAR start index 0: 4M optimal_score: 8 sub-optimal_score: 0 target_begin: 0 target_end: 3 query_begin: 0 query_end: 3  Target:        0    ACTG    3                     |||| Query:         0    ACTG    3"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"forced-alignment","dir":"Articles","previous_headings":"","what":"Forced alignment","title":"Getting started with ssw-r: Sequence alignment examples","text":"Enforce gaps increasing penalty: results truncated: Use formatter() avoid truncation: pretty-print formatted results directly:","code":"a <- force_align(\"ACTG\", \"TTTTCTGCCCCCACG\") a CIGAR start index 4: 3M optimal_score: 6 sub-optimal_score: 0 target_begin: 4 target_end: 6 query_begin: 1 query_end: 3  Target:        4    CTG    6                     ||| Query:         1    CTG    3 b <- a |> formatter() b [[1]] [1] \"TTTTCTGCCCCCACG\"  [[2]] [1] \"   ACTG\" a |> formatter(print = TRUE) TTTTCTGCCCCCACG    ACTG"},{"path":"https://nanx.me/ssw-r/articles/ssw.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"Getting started with ssw-r: Sequence alignment examples","text":"ssw-r built upon work two outstanding projects: SSW - Original C implementation. Author: Mengyao Zhao ssw-py - Python binding SSW. Author: Nick Conway extend sincere gratitude Mengyao Zhao developing original SSW library Nick Conway maintaining ssw-py package. work forms foundation ssw-r. ssw-r directly incorporate code projects, serves R interface functionality. encourage users visit original repositories information underlying implementation consider citing works publications use ssw-r.","code":""},{"path":[]},{"path":"https://nanx.me/ssw-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nan Xiao. Author, maintainer.","code":""},{"path":"https://nanx.me/ssw-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhao M, Lee W, Garrison EP, Marth GT (2013). “SSW library: SIMD Smith-Waterman C/C++ library use genomic applications.” PloS ONE, 8(12), e82138. doi:10.1371/journal.pone.0082138.","code":"@Article{zhao2013ssw,   title = {SSW library: an {SIMD} Smith-Waterman {C/C++} library for use in genomic applications},   author = {Mengyao Zhao and Wan-Ping Lee and Erik P Garrison and Gabor T Marth},   journal = {{PloS ONE}},   volume = {8},   number = {12},   pages = {e82138},   year = {2013},   doi = {10.1371/journal.pone.0082138}, }"},{"path":"https://nanx.me/ssw-r/index.html","id":"ssw-r-","dir":"","previous_headings":"","what":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"ssw-r offers R interface SSW, fast implementation Smith-Waterman algorithm sequence alignment using SIMD. ssw-r currently built Python package ssw-py.","code":""},{"path":"https://nanx.me/ssw-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"can install ssw-r CRAN available: try development version GitHub:","code":"install.packages(\"ssw\") remotes::install_github(\"nanxstats/ssw-r\")"},{"path":"https://nanx.me/ssw-r/index.html","id":"install-ssw-py","dir":"","previous_headings":"","what":"Install ssw-py","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"simple way install Python package ssw-py ssw-r can discover easily, run helper function ssw::install_ssw_py(). default, installs ssw-py virtual environment named r-ssw-py. follows best practices suggested reticulate vignette Managing R Package’s Python Dependencies. also recommendations vignette manage multiple R packages different Python dependencies.","code":"ssw::install_ssw_py()"},{"path":"https://nanx.me/ssw-r/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"detailed usage, see vignette.","code":"library(\"ssw\") \"ACGT\" |> align(\"TTTTACGTCCCCC\") CIGAR start index 4: 4M optimal_score: 8 sub-optimal_score: 0 target_begin: 4 target_end: 7 query_begin: 0 query_end: 3  Target:        4    ACGT    7                     |||| Query:         0    ACGT    3 \"ACGT\" |> align(\"TTTTACTCCCCC\", gap_open = 3) CIGAR start index 4: 2M optimal_score: 4 sub-optimal_score: 0 target_begin: 4 target_end: 5 query_begin: 0 query_end: 1  Target:        4    AC    5                     || Query:         0    AC    1 \"ACTG\" |> force_align(\"TTTTCTGCCCCCACG\") |> formatter(print = TRUE) TTTTCTGCCCCCACG    ACTG"},{"path":"https://nanx.me/ssw-r/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"ssw-r built upon work two outstanding projects: SSW - Original C implementation. Author: Mengyao Zhao ssw-py - Python binding SSW. Author: Nick Conway extend sincere gratitude Mengyao Zhao developing original SSW library Nick Conway maintaining ssw-py package. work forms foundation ssw-r. ssw-r directly incorporate code projects, serves R interface functionality. encourage users visit original repositories information underlying implementation consider citing works publications use ssw-r.","code":""},{"path":"https://nanx.me/ssw-r/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD","text":"project licensed MIT license.","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Smith-Waterman alignment of a read against a reference sequence — align","title":"Perform Smith-Waterman alignment of a read against a reference sequence — align","text":"Perform Smith-Waterman alignment read reference sequence","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Smith-Waterman alignment of a read against a reference sequence — align","text":"","code":"align(   read,   reference,   gap_open = 3L,   gap_extension = 1L,   start_idx = 0L,   end_idx = 0L,   match_score = 2L,   mismatch_penalty = 2L )"},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Smith-Waterman alignment of a read against a reference sequence — align","text":"read character string read. reference character string reference. gap_open Penalty opening gap. Default 3. gap_extension Penalty extending gap. Default 1. start_idx Index start alignment search. Default 0. end_idx Index end alignment search. default value 0 means using entire reference length. match_score integer scoring matches, ranging 0 255. Default 2. mismatch_penalty integer mismatch penalties, ranging 0 255. Default 2.","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Smith-Waterman alignment of a read against a reference sequence — align","text":"list class ssw containing ssw aligner object alignment results.","code":""},{"path":"https://nanx.me/ssw-r/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Smith-Waterman alignment of a read against a reference sequence — align","text":"","code":"if (FALSE) { # is_installed_ssw_py() a <- align(\"ACGT\", \"TTTTACGTCCCCC\") a a$alignment$optimal_score a$alignment$sub_optimal_score }"},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform forced alignment with increased gap open penalty — force_align","title":"Perform forced alignment with increased gap open penalty — force_align","text":"Perform forced alignment increased gap open penalty","code":""},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform forced alignment with increased gap open penalty — force_align","text":"","code":"force_align(   read,   reference,   force_overhang = FALSE,   match_score = 2L,   mismatch_penalty = 2L )"},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform forced alignment with increased gap open penalty — force_align","text":"read character string read. reference character string reference. force_overhang Logical. TRUE, ensures one end alignment overhangs. Default FALSE. match_score integer scoring matches, ranging 0 255. Default 2. mismatch_penalty integer mismatch penalties, ranging 0 255. Default 2.","code":""},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform forced alignment with increased gap open penalty — force_align","text":"list class ssw containing input sequences, ssw aligner object, alignment results.","code":""},{"path":"https://nanx.me/ssw-r/reference/force_align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform forced alignment with increased gap open penalty — force_align","text":"","code":"if (FALSE) { # is_installed_ssw_py() # Results are truncated a <- force_align(\"ACTG\", \"TTTTCTGCCCCCACG\") a  # Format the results b <- a |> formatter() b  # Print the formatted results directly a |> formatter(print = TRUE) }"},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and pretty-print SSW forced alignment results without truncation — formatter","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"Format pretty-print SSW forced alignment results without truncation","code":""},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"","code":"formatter(x, print = FALSE)"},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"x object class ssw containing forced alignment results. print Pretty-print results? Default FALSE.","code":""},{"path":"https://nanx.me/ssw-r/reference/formatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format and pretty-print SSW forced alignment results without truncation — formatter","text":"","code":"if (FALSE) { # is_installed_ssw_py() a <- force_align(\"ACTG\", \"TTTTCTGCCCCCACG\") b <- a |> formatter() b a |> formatter(print = TRUE) }"},{"path":"https://nanx.me/ssw-r/reference/install_ssw_py.html","id":null,"dir":"Reference","previous_headings":"","what":"Install ssw-py and its dependencies — install_ssw_py","title":"Install ssw-py and its dependencies — install_ssw_py","text":"Install ssw-py dependencies","code":""},{"path":"https://nanx.me/ssw-r/reference/install_ssw_py.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install ssw-py and its dependencies — install_ssw_py","text":"","code":"install_ssw_py(   ...,   envname = \"r-ssw-py\",   new_env = identical(envname, \"r-ssw-py\") )"},{"path":"https://nanx.me/ssw-r/reference/install_ssw_py.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install ssw-py and its dependencies — install_ssw_py","text":"... arguments passed reticulate::py_install(). envname name full path environment ssw-py installed. Default r-ssw-py. new_env Logical. TRUE, specified Python environment deleted recreated already exists. Defaults TRUE using default environment name.","code":""},{"path":"https://nanx.me/ssw-r/reference/install_ssw_py.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install ssw-py and its dependencies — install_ssw_py","text":"Invisibly returns NULL. Primarily used side effect installing Python package specified environment.","code":""},{"path":"https://nanx.me/ssw-r/reference/install_ssw_py.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install ssw-py and its dependencies — install_ssw_py","text":"","code":"if (FALSE) { # is_installed_ssw_py() install_ssw_py() }"},{"path":"https://nanx.me/ssw-r/reference/is_installed_ssw_py.html","id":null,"dir":"Reference","previous_headings":"","what":"Is ssw-py installed? — is_installed_ssw_py","title":"Is ssw-py installed? — is_installed_ssw_py","text":"ssw-py installed?","code":""},{"path":"https://nanx.me/ssw-r/reference/is_installed_ssw_py.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is ssw-py installed? — is_installed_ssw_py","text":"","code":"is_installed_ssw_py()"},{"path":"https://nanx.me/ssw-r/reference/is_installed_ssw_py.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is ssw-py installed? — is_installed_ssw_py","text":"TRUE installed, FALSE .","code":""},{"path":"https://nanx.me/ssw-r/reference/is_installed_ssw_py.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is ssw-py installed? — is_installed_ssw_py","text":"","code":"is_installed_ssw_py() #> [1] FALSE"},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":null,"dir":"Reference","previous_headings":"","what":"Print SSW alignment results — print.ssw","title":"Print SSW alignment results — print.ssw","text":"Print SSW alignment results","code":""},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print SSW alignment results — print.ssw","text":"","code":"# S3 method for class 'ssw' print(x, start_idx = 0L, ...)"},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print SSW alignment results — print.ssw","text":"x object class ssw. start_idx Index start printing . ... Additional parameters print() (used).","code":""},{"path":"https://nanx.me/ssw-r/reference/print.ssw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print SSW alignment results — print.ssw","text":"","code":"if (FALSE) { # is_installed_ssw_py() a <- align(\"ACGT\", \"TTTTACGTCCCCC\") a }"},{"path":"https://nanx.me/ssw-r/reference/ssw-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD — ssw-package","title":"ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD — ssw-package","text":"Provides R interface 'SSW' (Striped Smith-Waterman) via 'Python' binding 'ssw-py'. 'SSW' fast C/C++ implementation Smith-Waterman algorithm pairwise sequence alignment using Single-Instruction-Multiple-Data (SIMD) instructions. 'SSW' enhances standard algorithm efficiently returning alignment information suboptimal alignment scores. core 'SSW' library offers performance improvements various bioinformatics tasks, including protein database searches, short-read alignments, primary split-read mapping, structural variant detection, read-overlap graph generation. features make 'SSW' particularly useful genomic applications. Zhao et al. (2013) doi:10.1371/journal.pone.0082138  developed original C/C++ implementation.","code":""},{"path":[]},{"path":"https://nanx.me/ssw-r/reference/ssw-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ssw: Striped Smith-Waterman Algorithm for Sequence Alignment using SIMD — ssw-package","text":"Maintainer: Nan Xiao @nanx.(ORCID)","code":""},{"path":"https://nanx.me/ssw-r/reference/ssw_py.html","id":null,"dir":"Reference","previous_headings":"","what":"Global reference to ssw-py — ssw_py","title":"Global reference to ssw-py — ssw_py","text":"Global reference ssw-py initialized .onLoad.","code":""},{"path":"https://nanx.me/ssw-r/reference/ssw_py.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global reference to ssw-py — ssw_py","text":"","code":"ssw_py"},{"path":"https://nanx.me/ssw-r/reference/ssw_py.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global reference to ssw-py — ssw_py","text":"object class python.builtin.module (inherits python.builtin.object) length 0.","code":""},{"path":"https://nanx.me/ssw-r/reference/ssw_py.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global reference to ssw-py — ssw_py","text":"ssw-py reference object","code":""},{"path":"https://nanx.me/ssw-r/news/index.html","id":"ssw-011","dir":"Changelog","previous_headings":"","what":"ssw 0.1.1","title":"ssw 0.1.1","text":"Added two arguments match_score mismatch_penalty scoring matches mismatches (#1).","code":""},{"path":"https://nanx.me/ssw-r/news/index.html","id":"ssw-010","dir":"Changelog","previous_headings":"","what":"ssw 0.1.0","title":"ssw 0.1.0","text":"First version. Implements align() force_align().","code":""}]
